@base-url: "mixins";
@import "@{base-url}/clearfix.less";
@import "@{base-url}/grid.less";
@import "normalize.less";
@import "print.less";
@import "vendor-prefixes.less";


@columns:                   24;
@screen-xs-min:             480px;
@screen-sm-min:             768px;
@screen-md-min:             992px;
@screen-lg-min:             1200px;
@grid-gutter-width:         30px;

@container-sm: (720px + @grid-gutter-width);
@container-md: (940px + @grid-gutter-width);
@container-lg: (1140px + @grid-gutter-width);
.container {
    .container-fixed();
    @media (min-width: @screen-sm-min) {
        width: @container-sm;
    }
    @media (min-width: @screen-md-min) {
        width: @container-md;
    }
    @media (min-width: @screen-lg-min) {
        width: @container-lg;
    }
    //&:extend(.clearfix all);
}
.row {
    .make-row();
}
// 生成列间距
.make-grid-columns();
/*make xs*/
@media (min-width: @screen-xs-min) {
    .generate-columns(@columns, xs);
    .generate-columns-float(@columns, xs);
    .generate-offset-columns(@columns, xs);
}
/*make sm*/
@media (min-width: @screen-sm-min) {
    .generate-columns(@columns, sm);
    .generate-columns-float(@columns, sm);
    .generate-offset-columns(@columns, sm);
}
/*make md*/
@media (min-width: @screen-md-min) {
    .generate-columns(@columns, md);
    .generate-columns-float(@columns, md);
    .generate-offset-columns(@columns, md);
}
/*make lg*/
@media (min-width: @screen-lg-min) {
    .generate-columns(@columns, lg);
    .generate-columns-float(@columns, lg);
    .generate-offset-columns(@columns, lg);
}